lass Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    static bool comp (Item a, Item b){
        
        double r1 = (double) a.value /(double) a.weight; 
         double r2 = (double) b.value /(double) b.weight;
         return r1>r2;
        
        
    }
    double fractionalKnapsack(int w, Item a[], int n)
    {
        // Your code here
        sort ( a, a+n ,comp );
        double cur_weight=0;
        double final_val =0;
          
         for (int i=0;i<n;i++){
          if ( cur_weight + a[i].weight<=w ){
              
              cur_weight += a[i].weight;
              final_val += a[i].value;
              
          }
          
          else {
              
              int remain = w-cur_weight;
              final_val +=( (double) remain / (double )a[i].weight)* (double)a[i].value;
              break;
          }}
        
  return final_val;  }
        
};